// detect when we're debugging and disable the coverage preprocessor 
// to stop our source code being minified and altered
// Run as:
// karma start --debug
var sourcePreprocessors = 'coverage';
function isDebug(argument) {
	return argument === '--debug';
}
if (process.argv.some(isDebug)) sourcePreprocessors = [];	

module.exports = function(config) {
	
  config.set({

    // base path that will be used to resolve all patterns (eg. files, exclude)
    basePath: '',


    // frameworks to use
    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter
    frameworks: ['jasmine'],


    // list of files / patterns to load in the browser
    files: [			
			'www/app/App.js',
			'www/app/**/!(*spec|*mock).js',
      'www/app/**/*.spec.js'
    ],


    // list of files to exclude
    exclude: [
    ],


    // preprocess matching files before serving them to the browser
    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor		
		preprocessors: {
			'www/app/**/!(*spec|*mock).js': sourcePreprocessors,
		},
		
		// coverage config
		coverageReporter: {
      type : 'html',
      dir : 'tests/coverage/',
			instrumenterOptions: {
				//istanbul: { noCompact: true }
			}
    },


    // test results reporter to use
    // possible values: 'dots', 'progress'
    // available reporters: https://npmjs.org/browse/keyword/karma-reporter
    reporters: ['progress', 'coverage'],


    // web server port
    port: 9876,


    // enable / disable colors in the output (reporters and logs)
    colors: true,


    // level of logging
    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
    logLevel: config.LOG_INFO,
		
		client: {
			//captureConsole: false
		},


    // enable / disable watching file and executing tests whenever any file changes
    autoWatch: true,


    // start these browsers
    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher
    browsers: [
			//'PhantomJS', 
			'Chrome'],


    // Continuous Integration mode
    // if true, Karma captures browsers, runs the tests and exits
    singleRun: false,

    // Concurrency level
    // how many browser should be started simultaneous
    concurrency: Infinity
  })
}
